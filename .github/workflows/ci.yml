name: Microservice UserManagement Continuous Integration with Maven

on:
  push:
    branches: [ main ]

env:
  # Application
  APPLICATION_NAME: microservice-user-management
  # Postgres
  POSTGRESQL_VERSION: 12.5
  POSTGRESQL_IMAGE: postgres:12.5
  POSTGRESQL_USER: postgres
  POSTGRESQL_PASSWORD: postgres
  # Specific Databases
  POSTGRESQL_DB_USER_MANAGEMENT: user_management
  POSTGRESQL_DB_USER_MEETING: user_meeting
  POSTGRESQL_DB_USER_MEETING_SEARCH: user_meeting_search
  # Java
  JAVA_VERSION: 1.11
  # DockerHub
  DOCKER_HUB_USERNAME: michaelxsteinertxcontainer

jobs:
  user-management:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:12.5
        env:
          POSTGRES_DB: ${{ env.POSTGRESQL_DB_USER_MANAGEMENT }}
          POSTGRES_USER: ${{ env.POSTGRESQL_USER }}
          POSTGRES_PASSWORD: ${{ env.POSTGRESQL_PASSWORD }}
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - name: Messaging Slack
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
          text: 'Continuous Integration for Microservice UserManagement ongoing'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      - name: Checkout Repository
        uses: actions/checkout@v2
        with:
          repository: michael-steinert-repository/project-work
          path: project-work/backend/microservices/user-management
          submodules: true
      - name: Setup Java JDK
        uses: actions/setup-java@v1.4.3
        with:
          java-version: ${{ env.JAVA_VERSION }}
      - name: Build and Push Docker Image
        uses: mr-smithers-excellent/docker-build-push@v4
        with:
          image: ${{ env.DOCKER_HUB_USERNAME }}/${{ env.APPLICATION_NAME }}
          registry: docker.io
          username: ${{ env.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
      - name: Messaging Slack
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
          text: 'Pushed michael-steinert-repository/${{env.APPLICATION_NAME}} to DockerHub'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}