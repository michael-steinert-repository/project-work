version: '3.8'

services:
  service-discovery:
    image: service-discovery:0.0.1-SNAPSHOT
    container_name: service-discovery
    ports:
      - "8761:8761"

  config-server:
    image: config-server:0.0.1-SNAPSHOT
    container_name: config-server
    volumes:
      - ./config-repository:/var/config-data
    environment:
      - JAVA_OPTS=
         -DEUREKA_SERVER=http://service-discovery:8761/eureka
         -Dspring.cloud.config.server.native.searchLocations=/var/config-data
    depends_on:
      - service-discovery
    ports:
      - "8888:8888"

  gateway-service:
    image: gateway-service:0.0.1-SNAPSHOT
    container_name: gateway-service
    environment:
      - JAVA_OPTS=
        -DEUREKA_SERVER=http://service-discovery:8761/eureka
    restart: on-failure
    depends_on:
      - service-discovery
      - config-server
    ports:
      - "8080:8080"

  tracing-system:
    image: openzipkin/zipkin-slim
    container_name: tracing-system
    ports:
      - "9411:9411"

  user-management-service:
    image: user-management:0.0.1-SNAPSHOT
    container_name: user-management-service
#    links:
#      - "logstash:logstash"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://database-server:5432/user_management
      - ZIPKIN_BASE_URL=http://tracing-system:9411
      - JAVA_OPTS=
        -DEUREKA_SERVER=http://service-discovery:8761/eureka
    restart: on-failure
    depends_on:
      - service-discovery
      - config-server
      - gateway-service
      - database-server
      - tracing-system
#      - kibana
    ports:
      - "8081:8081"

  database-server:
    image: postgres:alpine
    container_name: database-server
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - ./volumes/postgres/docker_postgres_init.sql:/docker-entrypoint-initdb.d/docker_postgres_init.sql
      - ./volumes/postgres/backups:/home/backups
#      - ./volumes/postgres/user-management/init.sql:/docker-entrypoint-initdb/10-init.sql

#  filebeat:
#    image: filebeat
#    container_name: log-data-shipper
#    links:
#      - "logstash:logstash"
#    volumes: 
#      - /var/lib/docker:/var/lib/docker:ro
#      - /var/run/docker.sock:/var/run/docker.sock
#      - ./volumes/elk:/var/app 

#  logstash:
#    image: logstash
#    container_name: log-pipeline-tool
#    ports:
#      - "5044:5044"
#    volumes:
#      - ./volumes/elk:/var/app
#    links: 
#      - "elasticsearch:elasticsearch"
#    depends_on:
#      - elasticsearch

#  elasticsearch:
#    image: elasticsearch
#    container_name: log-index-database
#    environment:
#      - discovery.type=single-node
#    volumes:
#      - ./volumes/elk:/usr/share/elasticsearch/data 
#    ports:
#      - "9200:9200"
#      - "9300:9300"

#  kibana:
#    image: kibana
#    container_name: log-visualisation
#    environment:
#      SERVER_NAME: kibana.example.org
#      ELASTICSEARCH_URL: http://elasticsearch:9200
#    links:
#      - "elasticsearch:elasticsearch"
#    volumes:
#      - ./volumes/elk:/var/app
#    ports:
#      - "5601:5601"
#    depends_on: 
#      - elasticsearch